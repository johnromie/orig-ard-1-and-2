#include<Wire.h>
#include<AccelStepper.h>

#define PUL1_PIN 6
#define DIR1_PIN 7
#define PUL2_PIN 8
#define DIR2_PIN 9

int stepCount = 500;
//motor 
const int relaymotor = 3;

//pulverizer
const int pulvrelay = 10;

//extraheat
const int heatrelay = 11;

int conveyor = 1;

////conveyor 
//const int stepPin1 = 6; 
//const int dirPin1 = 7; 
//const int enPin1 = A3;
//
//const int stepPin2 = 8; 
//const int dirPin2 = 9; 
//const int enPin2 = A4;

//comms
String command = "";
int current_command = -1;

void setup() {
  Serial.begin(9600);

  pinMode(PUL1_PIN, OUTPUT);
  pinMode(DIR1_PIN, OUTPUT);
  pinMode(PUL2_PIN, OUTPUT);
  pinMode(DIR2_PIN, OUTPUT);

  digitalWrite(DIR1_PIN, HIGH);
  digitalWrite(DIR2_PIN, HIGH);
  
  //motor 
  pinMode(relaymotor, OUTPUT);

  //pulv
  pinMode(pulvrelay, OUTPUT);

  //heat
  pinMode(heatrelay, OUTPUT);
}

void loop() {
  if(current_command == -1){
    receiveCommand();
  }
 
  else if(current_command == 6){
    activate_pulverizer();
    current_command = -1;
  }

  else if(current_command == 5){
    onConveyor();
    current_command = -1;
  }

  else if(current_command == 4){
    activate_slicer();
    current_command = -1;
  }

  else if(current_command == 8){
    activate_extraheat();
    current_command = -1;
  }
  
  else if(current_command == 9){
    off_pulverizer();
    current_command = -1;
  }

  
}

void sendResponse(String response){
  Serial.println(response);    
}
 
void receiveCommand(){
  if(Serial.available()){
    int sent = Serial.readStringUntil('\n').toInt();
    Serial.println("ok"); 
    current_command = sent;   
  }
}

void activate_pulverizer(){
  digitalWrite(pulvrelay, HIGH);
}

void off_pulverizer(){
  digitalWrite(pulvrelay, LOW);
}

void activate_extraheat(){
  digitalWrite(heatrelay, HIGH);
}

void onConveyor() { 

    while (conveyor = 1) {
      for (int i = 0; i < stepCount; i++) { 
        digitalWrite(PUL1_PIN, HIGH);
        digitalWrite(PUL2_PIN, HIGH);
        delayMicroseconds(180000);
        digitalWrite(PUL1_PIN, LOW);
        digitalWrite(PUL2_PIN, LOW);
        delayMicroseconds(180000);
      }
      if (conveyor = 0) {
        break;
      }
    }
}

void activate_slicer(){
  digitalWrite(relaymotor, HIGH);
}
